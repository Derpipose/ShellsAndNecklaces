@page "/checkout";
@inject IDbContextFactory<OneShotShopContext> ContextFactory;
@inject NavigationManager NavManager;
@inject ILogger<CartService> itemLogger;

@using System.Security.Claims;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor _httpContextAccessor;
@inject HttpClient Http;

@using Microsoft.EntityFrameworkCore;

@using ShellAndNecklaceAPI;
@using ShellAndNecklaceAPI.Data;
@using ShellAndNecklaceAPI.Data.DTOs;
@using ShellAndNecklaceAPI.Services;

<Div Class="bodyContents">
<h3>Cart</h3>
<Div Class="bodyContents">

<Div class="centered-banner">
<h2 >Stretch Goal Territory ahead!</h2>
</Div>

<Div Class="wrappingtext">
    <Div>
        <img src="StretchGoalConstruction.jpg" class="big-thumb"/>
    </Div>
    <Div class="StretchGoalText">
        <p>
            Thank you so much for expressing interest in our checkout page!
            <br />
            Unfortunately, this was one of our stretch goals from the user experience prototype earlier in the semester.
            We have edged into this territory, but were not able to complete it in time for judging. Following next week, however,
            this will be completed and will have cards like those on the Shop page!
        </p>
    </Div>
</Div>
</Div>


@code {
    private List<CartDTO> itemlist;
    private CartService dbservice;
    private ClaimsPrincipal UserForEmail;
    private string Email;

    /*protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            UserForEmail = _httpContextAccessor.HttpContext.User;

            var givenEmail =
                _httpContextAccessor.HttpContext.User
                .FindFirst(ClaimTypes.Email);
            if (givenEmail != null)
            {
                Email = givenEmail.Value;
            }
            else
            {
                Email = "zanerclegg@gmail.com";
            }
            var context = await ContextFactory.CreateDbContextAsync();
            dbservice = new CartService(itemLogger, context);
            itemlist = await dbservice.GetUserCart(Email);


        }
        catch(Exception ex)
        {
            
        }
    }*/
}
